diff --git a/qtbase/src/widgets/accessible/qaccessiblewidgetfactory.cpp b/qtbase/src/widgets/accessible/qaccessiblewidgetfactory.cpp
index e13b7ebcf79..271352aeb89 100644
--- a/qtbase/src/widgets/accessible/qaccessiblewidgetfactory.cpp
+++ b/qtbase/src/widgets/accessible/qaccessiblewidgetfactory.cpp
@@ -114,11 +114,11 @@ QAccessibleInterface *qAccessibleFactory(const QString &classname, QObject *obje
     } else if (classname == "QMenu"_L1) {
         iface = new QAccessibleMenu(widget);
 #endif
-#if QT_CONFIG(treeview)
+#if QT_CONFIG(treeview) && !defined(Q_OS_MACOS)
     } else if (classname == "QTreeView"_L1) {
         iface = new QAccessibleTree(widget);
 #endif // QT_CONFIG(treeview)
-#if QT_CONFIG(itemviews)
+#if QT_CONFIG(itemviews) && !defined(Q_OS_MACOS)
     } else if (classname == "QTableView"_L1 || classname == "QListView"_L1) {
         iface = new QAccessibleTable(widget);
     // ### This should be cleaned up. We return the parent for the scrollarea to hide it.
diff --git a/qtbase/src/widgets/itemviews/qabstractitemview.cpp b/qtbase/src/widgets/itemviews/qabstractitemview.cpp
index c04a699a56c..16b6f0bef60 100644
--- a/qtbase/src/widgets/itemviews/qabstractitemview.cpp
+++ b/qtbase/src/widgets/itemviews/qabstractitemview.cpp
@@ -30,7 +30,7 @@
 #include <private/qapplication_p.h>
 #include <private/qguiapplication_p.h>
 #include <private/qscrollbar_p.h>
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
 #include <qaccessible.h>
 #endif
 #if QT_CONFIG(gestures) && QT_CONFIG(scroller)
@@ -1131,7 +1131,7 @@ void QAbstractItemView::reset()
     setRootIndex(QModelIndex());
     if (d->selectionModel)
         d->selectionModel->reset();
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         QAccessibleTableModelChangeEvent accessibleEvent(this, QAccessibleTableModelChangeEvent::ModelReset);
         QAccessible::updateAccessibility(&accessibleEvent);
@@ -1153,7 +1153,7 @@ void QAbstractItemView::setRootIndex(const QModelIndex &index)
         return;
     }
     d->root = index;
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         QAccessibleTableModelChangeEvent accessibleEvent(this, QAccessibleTableModelChangeEvent::ModelReset);
         QAccessible::updateAccessibility(&accessibleEvent);
@@ -3415,7 +3415,7 @@ void QAbstractItemView::dataChanged(const QModelIndex &topLeft, const QModelInde
         }
     }
 
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         QAccessibleTableModelChangeEvent accessibleEvent(this, QAccessibleTableModelChangeEvent::DataChanged);
         accessibleEvent.setFirstRow(topLeft.row());
@@ -3543,7 +3543,7 @@ void QAbstractItemViewPrivate::_q_rowsRemoved(const QModelIndex &index, int star
     if (q->isVisible())
         q->updateEditorGeometries();
     q->setState(QAbstractItemView::NoState);
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         QAccessibleTableModelChangeEvent accessibleEvent(q, QAccessibleTableModelChangeEvent::RowsRemoved);
         accessibleEvent.setFirstRow(start);
@@ -3634,7 +3634,7 @@ void QAbstractItemViewPrivate::_q_columnsRemoved(const QModelIndex &index, int s
     if (q->isVisible())
         q->updateEditorGeometries();
     q->setState(QAbstractItemView::NoState);
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         QAccessibleTableModelChangeEvent accessibleEvent(q, QAccessibleTableModelChangeEvent::ColumnsRemoved);
         accessibleEvent.setFirstColumn(start);
@@ -3657,7 +3657,7 @@ void QAbstractItemViewPrivate::_q_rowsInserted(const QModelIndex &index, int sta
     Q_UNUSED(start);
     Q_UNUSED(end);
 
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     Q_Q(QAbstractItemView);
     if (QAccessible::isActive()) {
         QAccessibleTableModelChangeEvent accessibleEvent(q, QAccessibleTableModelChangeEvent::RowsInserted);
@@ -3683,7 +3683,7 @@ void QAbstractItemViewPrivate::_q_columnsInserted(const QModelIndex &index, int
     Q_Q(QAbstractItemView);
     if (q->isVisible())
         q->updateEditorGeometries();
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         QAccessibleTableModelChangeEvent accessibleEvent(q, QAccessibleTableModelChangeEvent::ColumnsInserted);
         accessibleEvent.setFirstColumn(start);
@@ -3711,7 +3711,7 @@ void QAbstractItemViewPrivate::_q_modelDestroyed()
 void QAbstractItemViewPrivate::_q_layoutChanged()
 {
     doDelayedItemsLayout();
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     Q_Q(QAbstractItemView);
     if (QAccessible::isActive()) {
         QAccessibleTableModelChangeEvent accessibleEvent(q, QAccessibleTableModelChangeEvent::ModelReset);
diff --git a/qtbase/src/widgets/itemviews/qlistview.cpp b/qtbase/src/widgets/itemviews/qlistview.cpp
index a4cb4c76fbc..2b966578c45 100644
--- a/qtbase/src/widgets/itemviews/qlistview.cpp
+++ b/qtbase/src/widgets/itemviews/qlistview.cpp
@@ -5,7 +5,7 @@
 #include "qlistview.h"
 
 #include <qabstractitemdelegate.h>
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
 #include <qaccessible.h>
 #endif
 #include <qapplication.h>
@@ -1622,7 +1622,7 @@ void QListView::setModelColumn(int column)
         return;
     d->column = column;
     d->doDelayedItemsLayout();
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         QAccessibleTableModelChangeEvent event(this, QAccessibleTableModelChangeEvent::ModelReset);
         QAccessible::updateAccessibility(&event);
@@ -3406,7 +3406,7 @@ void QIconModeViewBase::updateContentsSize()
 void QListView::currentChanged(const QModelIndex &current, const QModelIndex &previous)
 {
     QAbstractItemView::currentChanged(current, previous);
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         if (current.isValid()) {
             int entry = visualIndex(current);
@@ -3424,7 +3424,7 @@ void QListView::currentChanged(const QModelIndex &current, const QModelIndex &pr
 void QListView::selectionChanged(const QItemSelection &selected,
                                  const QItemSelection &deselected)
 {
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         // ### does not work properly for selection ranges.
         QModelIndex sel = selected.indexes().value(0);
diff --git a/qtbase/src/widgets/itemviews/qtableview.cpp b/qtbase/src/widgets/itemviews/qtableview.cpp
index 9d6499de5b9..d4c4da32ab4 100644
--- a/qtbase/src/widgets/itemviews/qtableview.cpp
+++ b/qtbase/src/widgets/itemviews/qtableview.cpp
@@ -19,7 +19,7 @@
 #include <private/qtableview_p.h>
 #include <private/qheaderview_p.h>
 #include <private/qscrollbar_p.h>
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
 #include <qaccessible.h>
 #endif
 
@@ -3476,7 +3476,7 @@ void QTableViewPrivate::selectColumn(int column, bool anchor)
  */
 void QTableView::currentChanged(const QModelIndex &current, const QModelIndex &previous)
 {
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         if (current.isValid()) {
             Q_D(QTableView);
@@ -3498,7 +3498,7 @@ void QTableView::selectionChanged(const QItemSelection &selected,
 {
     Q_D(QTableView);
     Q_UNUSED(d);
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         // ### does not work properly for selection ranges.
         QModelIndex sel = selected.indexes().value(0);
diff --git a/qtbase/src/widgets/itemviews/qtreeview.cpp b/qtbase/src/widgets/itemviews/qtreeview.cpp
index 7454fb83a7c..be071310715 100644
--- a/qtbase/src/widgets/itemviews/qtreeview.cpp
+++ b/qtbase/src/widgets/itemviews/qtreeview.cpp
@@ -15,7 +15,7 @@
 #include <qdebug.h>
 #include <QMetaMethod>
 #include <private/qscrollbar_p.h>
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
 #include <qaccessible.h>
 #endif
 
@@ -3352,7 +3352,7 @@ void QTreeViewPrivate::layout(int i, bool recursiveExpanding, bool afterIsUninit
         return;
     }
 
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     // QAccessibleTree's rowCount implementation uses viewItems.size(), so
     // we need to invalidate any cached accessibility data structures if
     // that value changes during the run of this function.
@@ -4035,7 +4035,7 @@ void QTreeView::currentChanged(const QModelIndex &current, const QModelIndex &pr
         if (current.isValid())
             viewport()->update(d->visualRect(current, QTreeViewPrivate::FullRow));
     }
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive() && current.isValid()) {
         Q_D(QTreeView);
 
@@ -4053,7 +4053,7 @@ void QTreeView::selectionChanged(const QItemSelection &selected,
                                  const QItemSelection &deselected)
 {
     QAbstractItemView::selectionChanged(selected, deselected);
-#if QT_CONFIG(accessibility)
+#if QT_CONFIG(accessibility) && !defined(Q_OS_MACOS)
     if (QAccessible::isActive()) {
         Q_D(QTreeView);
 
